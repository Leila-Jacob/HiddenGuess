/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  HiddenGuess,
  HiddenGuessInterface,
} from "../../contracts/HiddenGuess";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "minRange",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "maxRange",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "maxPlayers",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "msgValue",
        type: "uint256",
      },
    ],
    name: "DebugInfo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roomId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "GuessSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roomId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerJoined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roomId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roomId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "minRange",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "maxRange",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "maxPlayers",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
    ],
    name: "RoomCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roomId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "winningGuess",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "RoomRevealed",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_ENTRY_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_PLAYERS",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_ENTRY_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_PLAYERS",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roomId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "allowPlayerGuessDecryption",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roomId",
        type: "uint256",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "minRange",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "maxRange",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "maxPlayers",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        internalType: "externalEuint32",
        name: "targetEuint32",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "targetProof",
        type: "bytes",
      },
    ],
    name: "createRoom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roomId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPlayer",
    outputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "hasSubmitted",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "hasClaimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roomId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPlayerGuess",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roomId",
        type: "uint256",
      },
    ],
    name: "getRoom",
    outputs: [
      {
        internalType: "uint256",
        name: "roomId_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "minRange",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "maxRange",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "maxPlayers",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "currentPlayers",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPool",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isRevealed",
        type: "bool",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roomId",
        type: "uint256",
      },
    ],
    name: "getRoomPlayers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roomId",
        type: "uint256",
      },
    ],
    name: "getTarget",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roomId",
        type: "uint256",
      },
    ],
    name: "getWinningGuess",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roomId",
        type: "uint256",
      },
    ],
    name: "joinRoom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mockGuesses",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mockMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mockTargets",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextRoomId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "euint32",
        name: "guess",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "hasSubmitted",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "hasClaimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roomId",
        type: "uint256",
      },
    ],
    name: "revealRoom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roomPlayers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rooms",
    outputs: [
      {
        internalType: "uint256",
        name: "roomId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "minRange",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "maxRange",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "maxPlayers",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "currentPlayers",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPool",
        type: "uint256",
      },
      {
        internalType: "euint32",
        name: "target",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isRevealed",
        type: "bool",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        internalType: "euint32",
        name: "winningGuess",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roomId",
        type: "uint256",
      },
      {
        internalType: "externalEuint32",
        name: "guessEuint32",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "guessProof",
        type: "bytes",
      },
    ],
    name: "submitGuess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052346101cb575f60606100146101cf565b828152826020820152826040820152015261002d6101cf565b60607350157cffd6bbfa2dece204a89ec419c23ef5755d9182815273cd3ab3bd6bcc0c0bf3e27912a92043e817b1cf6980602083015273a02cda4ca3a71d7c46997716f4283aa851c2881291826040820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac938491015260018060a01b0319937f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970090858254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970190848254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970290838254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497039182541617905560015f5533156101b35760015460405190336001600160a01b0382167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a36001600160a81b0319163360ff60a01b191617600160a01b176001908155600455611eec9081620002038239f35b604051631e4fbdf760e01b81525f6004820152602490fd5b5f80fd5b60405190608082016001600160401b038111838210176101ee57604052565b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c9081621c5c39146117215750806307a52cab1461170457806309ed3e22146116b45780631bae0ac8146115df57806343925cc31461152d5780634411b3eb14611512578063525121df146114e25780636454e58d1461147e5780636bef52e0146114515780636d8a74cb14611394578063715018a614611339578063751222c91461131457806381883759146112f357806385f07bbe146112d85780638da5cb5b146112b05780639cfc4b4514611184578063ae169a5014611001578063b1724b4614610fe4578063b6a6d17714610fc8578063b70577e914610d6e578063c090e6cb1461078a578063c0f809211461071a578063c995b23c14610398578063da1f12ab1461037c578063db2e21bc146102fc578063e6acc7cd146102cf578063eb1d111d14610270578063f2fde38b146101e2578063f4dcdc8e1461018b5763f50ab0de14610165575f80fd5b34610187575f366003190112610187576020604051670de0b6b3a76400008152f35b5f80fd5b34610187576040366003190112610187576101a4611769565b6004355f52600660205260405f209060018060a01b03165f526020526020600160405f206101d860ff6002830154166119b2565b0154604051908152f35b34610187576020366003190112610187576004356001600160a01b0381811691829003610187576102116119fd565b811561025857600154826bffffffffffffffffffffffff60a01b821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b604051631e4fbdf760e01b81525f6004820152602490fd5b3461018757604036600319011261018757602061028b611769565b6004355f526006825260405f2060018060a01b0382165f5282526102c7600160405f206102be60ff6002830154166119b2565b01549182611e1a565b604051908152f35b34610187576020366003190112610187576004355f5260056020526020600660405f200154604051908152f35b34610187575f366003190112610187576103146119fd565b478015610340575f80808061033e9460018060a01b03600154165af16103386118fb565b5061192a565b005b60405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606490fd5b34610187575f3660031901126101875760206040516127118152f35b34610187576020366003190112610187576004355f52600560205260405f206007810180546103c960ff821661180c565b600383015442106106e15760ff8160081c166106a9576101009061ffff19161781556004355f52600760205260405f20604051808260208294549384815201905f5260205f20925f5b818110610687575050610427925003826117ea565b5f90610431611dc8565b935f602060018060a01b035f80516020611e978339815191525416604460405180948193639cd07acb60e01b835263ffffffff6004840152600460248401525af19081156105c8575f91610655575b50945f5b83518110156105d3576004355f5260068060205260405f2060018060a01b036104ad848861199e565b51165f5260205260405f209060ff6002830154166104d0575b5050600101610484565b6001820154908501546104e291611c91565b60206104f56104ef611dc8565b83611d44565b606461050884610503611dc8565b611c91565b915f60018060a01b035f80516020611e9783398151915254166040519687958694637702dcff60e01b86526004860152602485015260448401525af19081156105c8575f91610596575b5061055d8982611d44565b506001600160a01b0387166104c657919750945090506001806001600160a01b03610588898761199e565b5116950154919690886104c6565b90506020813d6020116105c0575b816105b1602093836117ea565b81010312610187575189610552565b3d91506105a4565b6040513d5f823e3d90fd5b50845462010000600160b01b031916601085901b62010000600160b01b031617855583918190600801556001600160a01b0382169182610645575b826040515f81525f60208201527f1db436236d6532e36ce6fb1bc114d6b12aff667dc0cebe2ab23fb5a4b7617c5a604060043592a3005b61064e91611e1a565b818061060e565b90506020813d60201161067f575b81610670602093836117ea565b81010312610187575186610480565b3d9150610663565b84546001600160a01b0316835260019485019486945060209093019201610412565b60405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c995d99585b195960821b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270149bdbdb481b9bdd08199a5b9a5cda1959607a1b6044820152606490fd5b34610187576040366003190112610187576080610735611769565b6004355f52600660205260405f2060018060a01b038092165f5260205260ff60405f209182541691600260018201549101549060405193845260208401528181161515604084015260081c1615156060820152f35b60e03660031901126101875760043563ffffffff811681036101875760243563ffffffff81168103610187576044359063ffffffff821682036101875760c43567ffffffffffffffff8111610187576107e79036906004016117a8565b9190927f872c2e7e3bc13d25c531a04ebc54b923433c1f807a618551b1d8aad6aa40584761012060405160e08152601160e08201527018dc99585d19549bdbdb4818d85b1b1959607a1b61010082015263ffffffff8816602082015263ffffffff8516604082015263ffffffff84166060820152606435608082015260843560a08201523460c0820152a17f872c2e7e3bc13d25c531a04ebc54b923433c1f807a618551b1d8aad6aa405847610120476040519060e08252601760e08301527f436f6e74726163742062616c616e6365206265666f72650000000000000000006101008301525f60208301525f60408301525f60608301525f60808301525f60a083015260c0820152a163ffffffff821663ffffffff86161015610d3957600263ffffffff8216101580610d28575b15610cec57610e10606435101580610cdd575b15610ca55766038d7ea4c68000608435101580610c91575b15610c585761095460843534101561188d565b600454935f198514610c445760018501600455610973606435426118d2565b9360ff60015460a01c165f14610c2757505061098d611dc8565b91845f52600260205260405f20602a63ffffffff198254161790555b6109b1611dc8565b9060405191826101c081011067ffffffffffffffff6101c085011117610c135763ffffffff9483610b49926101c0889601604052898252336020830152858b166040830152858516606083015285871660808301525f60a08301528860c083015260843560e0830152346101008301528261012083015260016101408301525f6101608301525f6101808301526101a0820152885f52600560205260086101a060405f20928051845560018060a01b036020820151168860a01b604083015160a01b168960c01b606084015160c01b16908a60e01b608085015160e01b16921717176001850155600284018860a083015116891982541617905560c0810151600385015560e0810151600485015561010081015160058501556101208101516006850155610b3d60078501610af96101408401511515829060ff801983541691151516179055565b610160830151815461ff00191690151560081b61ff0016178155610180830151815462010000600160b01b03191660109190911b62010000600160b01b0316179055565b01519101553390611e1a565b610b5286611a29565b7f872c2e7e3bc13d25c531a04ebc54b923433c1f807a618551b1d8aad6aa405847610120476040519060e08252601660e08301527521b7b73a3930b1ba103130b630b731b29030b33a32b960511b6101008301525f60208301525f60408301525f60608301525f60808301525f60a083015260c0820152a18160405197168752166020860152166040840152606083015260843560808301527f6dbe1d20b3018289036faf2b552790da08f94012412e9c4f800251e73c116d8960a03393a3005b634e487b7160e01b5f52604160045260245ffd5b610c3e91610c36913691611968565b60a435611b4f565b916109a9565b634e487b7160e01b5f52601160045260245ffd5b60405162461bcd60e51b8152602060048201526011602482015270496e76616c696420656e7472792066656560781b6044820152606490fd5b50670de0b6b3a76400006084351115610941565b60405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b210323ab930ba34b7b760811b6044820152606490fd5b5062093a806064351115610929565b60405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081c1b185e595c8818dbdd5b9d60621b6044820152606490fd5b50603263ffffffff82161115610916565b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c69642072616e676560981b6044820152606490fd5b3461018757606036600319011261018757602460043560443567ffffffffffffffff811161018757610da49036906004016117a8565b9290825f526020936005855260405f20946006815260405f20335f528152610de5600360405f2097610ddc60ff60078301541661180c565b0154421061184a565b85546001600160a01b031615610f8e57600286019260ff845416610f4a5760015460a01c60ff1615610f2257610e19611dc8565b94602a936022811015610e98575b50505084958492600192610e70975f526003815260405f2090335f525263ffffffff60405f20911663ffffffff198254161790555b0155805460ff191660011790553090611e1a565b33907fc675cced853e0e7be5b8dd56ac49762d4aaa8e71646299057ff8fbb780170e435f80a3005b809192939450601e1015610f0e5780601f1015610f0e5780841015610f0e5760211015610efb5750601e81013560f81c601f82013560f01c61ff0016178183013560e81c62ff0000161760219091013560e01c63ff000000161790858185610e27565b634e487b7160e01b5f9081526032600452fd5b50634e487b7160e01b5f9081526032600452fd5b610f42915093610f3b600195610e709798943691611968565b9035611b4f565b928391610e5c565b60405162461bcd60e51b8152600481018390526017818701527f416c7265616479207375626d69747465642067756573730000000000000000006044820152606490fd5b6064906014856040519262461bcd60e51b8452600484015282015273135d5cdd081a9bda5b881c9bdbdb48199a5c9cdd60621b6044820152fd5b34610187575f366003190112610187576020604051610e108152f35b34610187575f36600319011261018757602060405162093a808152f35b34610187576020806003193601126101875760043560025f54146111725760025f55805f526005825260405f20600781015460ff8160081c16156111395760101c6001600160a01b03163303611103576005019182549283156110c957905f7f24b5efa61dd1cfc659205a97fb8ed868f3cb8c81922bab2b96423e5de1de2cb79255825f526006815260405f20335f528152600260405f200161010061ff00198254161790556110ba5f80808088335af16103386118fb565b6040519384523393a360015f55005b60405162461bcd60e51b81526004810183905260126024820152714e6f2072657761726420746f20636c61696d60701b6044820152606490fd5b60405162461bcd60e51b815260048101849052600e60248201526d2737ba103a3432903bb4b73732b960911b6044820152606490fd5b60405162461bcd60e51b8152600481018590526011602482015270149bdbdb481b9bdd081c995d99585b1959607a1b6044820152606490fd5b604051633ee5aeb560e01b8152600490fd5b6020806003193601126101875760043590815f526005815260405f20906111b160ff60078401541661180c565b6111c06003830154421061184a565b63ffffffff600283015416600183015460e01c1115611280576111e9600483015434101561188d565b825f526006815260405f20335f52815260ff600260405f2001541661124b575060059061121583611a29565b016112213482546118d2565b905533907f87969bc7faf902221a147b95ceba76e011c5efb0339a0a8ee7a2bb82d9cfbbd65f80a3005b6064906040519062461bcd60e51b82526004820152600e60248201526d105b1c9958591e481a9bda5b995960921b6044820152fd5b6064906040519062461bcd60e51b825260048201526009602482015268149bdbdb48199d5b1b60ba1b6044820152fd5b34610187575f366003190112610187576001546040516001600160a01b039091168152602090f35b34610187575f36600319011261018757602060405160028152f35b34610187575f36600319011261018757602060405166038d7ea4c680008152f35b34610187575f36600319011261018757602060ff60015460a01c166040519015158152f35b34610187575f366003190112610187576113516119fd565b600180546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610187576020366003190112610187576004355f52600560205261018060405f20805490600181015460018060a01b039163ffffffff9182600283015416600383015490600484015492600760058601549501549560405198895287821660208a0152808260a01c1660408a01528160c01c16606089015260e01c608088015260a087015260c086015260e085015261010084015260ff8116151561012084015260ff8160081c16151561014084015260101c16610160820152f35b34610187576020366003190112610187576004355f5260056020526020600860405f200154604051908152f35b34610187576040366003190112610187576060611499611769565b6004355f52600660205260405f2060018060a01b038092165f5260205260ff600260405f20928354169201546040519283528181161515602084015260081c1615156040820152f35b34610187576020366003190112610187576004355f526002602052602063ffffffff60405f205416604051908152f35b34610187575f36600319011261018757602060405160328152f35b3461018757602080600319360112610187576004355f526007815260405f20604051908183825491828152019081925f52845f20905f5b868282106115c257868661157a828803836117ea565b60405192839281840190828552518091526040840192915f5b8281106115a257505050500390f35b83516001600160a01b031685528695509381019392810192600101611593565b83546001600160a01b031685529093019260019283019201611564565b34610187576020366003190112610187576004355f5260056020526101c060405f2080549060018101549060018060a01b039063ffffffff9283600283015416600383015460048401549060058501549260068601549460086007880154970154986040519a8b5288821660208c0152808260a01c1660408c01528160c01c1660608b015260e01c60808a015260a089015260c088015260e087015261010086015261012085015260ff8116151561014085015260ff8160081c16151561016085015260101c166101808301526101a0820152f35b34610187576040366003190112610187576024356004355f52600760205260405f208054821015610187576020916116eb9161177f565b905460405160039290921b1c6001600160a01b03168152f35b34610187575f366003190112610187576020600454604051908152f35b346101875760403660031901126101875760209061173d611769565b6004355f9081526003845260408082206001600160a01b039093168252918452205463ffffffff168152f35b602435906001600160a01b038216820361018757565b8054821015611794575f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b9181601f840112156101875782359167ffffffffffffffff8311610187576020838186019501011161018757565b67ffffffffffffffff8111610c1357604052565b90601f8019910116810190811067ffffffffffffffff821117610c1357604052565b1561181357565b60405162461bcd60e51b815260206004820152600f60248201526e526f6f6d206e6f742061637469766560881b6044820152606490fd5b1561185157565b60405162461bcd60e51b8152602060048201526014602482015273149bdbdb48191958591b1a5b99481c185cdcd95960621b6044820152606490fd5b1561189457565b60405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420656e7472792066656560501b6044820152606490fd5b91908201809211610c4457565b67ffffffffffffffff8111610c1357601f01601f191660200190565b3d15611925573d9061190c826118df565b9161191a60405193846117ea565b82523d5f602084013e565b606090565b1561193157565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b929192611974826118df565b9161198260405193846117ea565b829481845281830111610187578281602093845f960137010152565b80518210156117945760209160051b010190565b156119b957565b606460405162461bcd60e51b815260206004820152602060248201527f506c6179657220686173206e6f74207375626d697474656420612067756573736044820152fd5b6001546001600160a01b03163303611a1157565b60405163118cdaa760e01b8152336004820152602490fd5b805f5260056020526040805f2090611a3f611dc8565b92815193608085019085821067ffffffffffffffff831117610c1357611ae991845233865260208601908152838601905f8252611ad2600260608901925f8452865f526006602052875f20335f52602052875f209060018060a01b03809b51166bffffffffffffffffffffffff60a01b8354161782555160018201550192511515839060ff801983541691151516179055565b51815461ff00191690151560081b61ff0016179055565b5f5260076020525f209182549268010000000000000000841015610c135783611b1991600160029601815561177f565b819291549060031b9133831b921b191617905501805463ffffffff808216818114610c4457600101169063ffffffff1916179055565b5f80516020611e978339815191525460405163196d0b9b60e01b815260048101929092523360248301526080604483015282516084830181905291926001600160a01b03929183169184915f5b828110611c7957505091815f60a4828683836020998401015260046064830152601f801991011681010301925af19182156105c8575f92611c45575b507f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497005416803b1561018757604051630f8e573b60e21b815260048101839052336024820152905f908290604490829084905af180156105c857611c39575090565b611c42906117d6565b90565b9091506020813d602011611c71575b81611c61602093836117ea565b810103126101875751905f611bd8565b3d9150611c54565b602082820181015160a4898401015287945001611b9c565b908115611d34575b8015611d22575b602090606460018060a01b035f80516020611e978339815191525416935f60405195869485936303056db360e31b8552600485015260248401528160448401525af19081156105c8575f91611cf3575090565b90506020813d602011611d1a575b81611d0e602093836117ea565b81010312610187575190565b3d9150611d01565b506020611d2d611dc8565b9050611ca0565b9050611d3e611dc8565b90611c99565b908115611db8575b8015611da6575b602090606460018060a01b035f80516020611e978339815191525416935f6040519586948593637210768160e01b8552600485015260248401528160448401525af19081156105c8575f91611cf3575090565b506020611db1611dc8565b9050611d53565b9050611dc2611dc8565b90611d4c565b5f80516020611e9783398151915254604051639cd07acb60e01b81525f600480830182905260248301529091602091839160449183916001600160a01b03165af19081156105c8575f91611cf3575090565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700546001600160a01b031691823b1561018757604051635ca4b5b160e11b815260048101929092526001600160a01b03166024820152905f908290604490829084905af180156105c857611e8b5750565b611e94906117d6565b56fe9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701a26469706673582212204b9c12f3a07c7f6f2ae064eec91c8007d8472f3abd4fddf9264d05936978c67564736f6c63430008180033";

type HiddenGuessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HiddenGuessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HiddenGuess__factory extends ContractFactory {
  constructor(...args: HiddenGuessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      HiddenGuess & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): HiddenGuess__factory {
    return super.connect(runner) as HiddenGuess__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HiddenGuessInterface {
    return new Interface(_abi) as HiddenGuessInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): HiddenGuess {
    return new Contract(address, _abi, runner) as unknown as HiddenGuess;
  }
}
